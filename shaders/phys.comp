#version 430 core

layout(binding = 0, std430) writeonly buffer data0 {
    float heightMap[];
};
layout(binding = 1, std430) readonly buffer data1 {
    float ws[];
};

uniform float meshSize;
uniform float time;
uniform int wavesCount;

// uniform float xi_re;
// uniform float xi_im;
// uniform vec3 windDir;
// uniform float windSpeed;

layout (local_size_x = 1, local_size_y = 1) in;

void main() {
    ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);
    uint baseIndex = (storePos.y * gl_NumWorkGroups.x + storePos.x) * 3;

    float height = 0.0;
    for (int i = 0; i < wavesCount; i++) {
        int cbs = i * 7;

        vec2 k = vec2(ws[cbs + 0], ws[cbs + 2]);
        float dp = dot(k, vec2(storePos)) * meshSize;
        float Re = ws[cbs + 5] * cos(dp) - ws[cbs + 6] * sin(dp);
        float Im = ws[cbs + 5] * sin(dp) + ws[cbs + 6] * cos(dp);
        height += Re + Im;
    }

    heightMap[baseIndex + 0] = storePos.x * meshSize;
    heightMap[baseIndex + 1] = height;
    heightMap[baseIndex + 2] = storePos.y * meshSize;
}
