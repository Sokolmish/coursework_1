#version 430 core

layout (local_size_x = 1, local_size_y = 1) in;

layout(binding = 0, std430) readonly buffer data0 {
    float heightMap[];
};
layout (binding = 1, rgba32f) uniform writeonly image2D normalMap;

vec3 getPoint(ivec2 pos) {
    uint px = clamp(pos.x, 0, gl_NumWorkGroups.x - 1);
    uint py = clamp(pos.y, 0, gl_NumWorkGroups.y - 1);
    uint base = (py * gl_NumWorkGroups.x + px) * 3;
    return vec3(heightMap[base + 0], heightMap[base + 1], heightMap[base + 2]);
}

void main() {
    ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);

    vec3 curPos = getPoint(storePos);
    vec3 posx = normalize(getPoint(storePos + ivec2(+1, 0)) - curPos);
    vec3 posy = normalize(getPoint(storePos + ivec2(0, +1)) - curPos);
    vec3 negx = normalize(getPoint(storePos + ivec2(-1, 0)) - curPos);
    vec3 negy = normalize(getPoint(storePos + ivec2(0, -1)) - curPos);

    vec3 res = normalize(
        cross(negy, negx) +
        cross(negx, posy) +
        cross(posy, posx) +
        cross(posx, negy)
    );
    imageStore(normalMap, storePos, vec4(res, 1.0));
}
