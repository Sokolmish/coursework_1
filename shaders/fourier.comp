#version 430 core

layout (local_size_x = 1, local_size_y = 1) in;

layout (binding = 0, rgba32f) uniform readonly image2D pp0;
layout (binding = 1, rgba32f) uniform readonly image2D pp1;
layout (binding = 2, std430) writeonly buffer data0 {
    float buff[];
};

uniform int pp;
uniform int N;
uniform int buffPos;
uniform float meshSize;

void main() {
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    float perms[] = { 1.0, -1.0 };
    int index = int(mod((int(pos.x + pos.y)), 2));
    float h;
    if (pp == 0)
        h = imageLoad(pp0, pos).r;
    else
        h = imageLoad(pp1, pos).r;
    float grsc = perms[index] * (h / float(N * N));

    uint base = (pos.y * gl_NumWorkGroups.x + pos.x) * 3;
    if (buffPos == 0)
        buff[base + 0] = pos.x * meshSize - grsc;
    else if (buffPos == 1)
        buff[base + 1] = grsc;
    else // if (buffPos == 2)
        buff[base + 2] = pos.y * meshSize - grsc;
}
